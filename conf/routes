# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                                      controllers.Application.index()
GET     /dashboard/help                                        controllers.Dashboard.help()
GET     /dashboard                                             controllers.Dashboard.index()
GET     /dashboard/manageEvents                                controllers.Dashboard.manageEvents()
GET     /dashboard/getEvents                                   controllers.Dashboard.getEventstoActivate()
GET     /dashboard/getSummary                                  controllers.Dashboard.getEventSummary()
GET     /dashboard/getEvents/activate                          controllers.Dashboard.activateEvent(eventId: Long)
GET     /dashboard/getSummary/individualEventSummary           controllers.Dashboard.generateIndividualEventSummary(eventName: String)
GET     /assets/javascripts/listUser.js                        controllers.Dashboard.listUserJs(divID:String)
GET     /assets/javascripts/listEvent.js                       controllers.Dashboard.listEventJs(divID:String)

POST    /dashboard/createEvent                  controllers.Dashboard.createEvent()

POST    /dashboard/deleteEvent                  controllers.Dashboard.deleteEvent()
POST    /dashboard/updateEvent                  controllers.Dashboard.updateEvent()


#Past Event Related Discussions and Statistics
GET     /dashboard/pastEvents                   controllers.Dashboard.instructorPastEventDiscussions()
POST    /pastEvents/view                        controllers.PastEventController.pastEventsViewer(eventId: Long)
POST    /userEventStatistics                    controllers.PastEventController.pastUserEventStatistics(userId: Long, eventId: Long)

#Statistics
GET     /statistics/getEventStatistics                                     controllers.Statistics.getEventStatistics()
GET     /statistics/getStudentStatistics                                   controllers.Statistics.getStudentStatistics()
GET     /statistics/getEventStatistics/individualEventStatistics           controllers.Statistics.generateIndividualEventStatistics(eventName: String)
GET     /statistics/getStudentStatistics/individualStudentStatistics       controllers.Statistics.generateIndividualStudentStatistics(studentName: String)
GET     /statistics/getEventMessageStats                                   controllers.Statistics.getEventMessageStatsPie(eventName: String)
GET     /statistics/getEventMessageStatsBG                                 controllers.Statistics.getEventMessageStatsBG(eventName: String)



#Student Home Page Specific
GET     /leaderBoard                controllers.Application.leaderBoard(userId: Long)
GET     /profile                    controllers.Application.profile()
GET     /pastEventDiscussion        controllers.Application.pastEventDiscussion(userId: Long)
POST    /pastEventDiscussion/view   controllers.Application.pastEventDiscussionView(eventId: Long, userId: Long)
GET     /myEventStatistics          controllers.Application.myEventStats(userId: Long)


GET     /event/chatPhaseEvents      controllers.EventController.getChatPhaseEvents()
POST    /eventStage1                controllers.EventController.eventStage1(eventId: Long)
POST    /eventStage3                controllers.EventController.eventStage3(eventId: Long)
POST    /eventStage4                controllers.EventController.eventStage4(eventId: Long)
POST    /eventResult                controllers.EventController.eventResult()


POST    /login                      controllers.Application.authenticate()
GET     /logout                     controllers.Application.logout()

GET     /settings                   controllers.account.settings.Index.index()
GET     /settings/password          controllers.account.settings.Password.index()
POST    /settings/password          controllers.account.settings.Password.runPassword()
GET     /settings/email             controllers.account.settings.Email.index()
POST    /settings/email             controllers.account.settings.Email.runEmail()

#Live Feeds

GET     /eventFeeds                      controllers.EventController.eventFeeds()
GET     /assets/javascripts/liveFeed.js  controllers.EventController.eventFeedsJs()
GET     /eventStats                      controllers.EventController.eventStats()
GET     /offlineStats                    controllers.EventController.offlineEventStats()

# Registers the user, sending an email to confirm the account.
GET     /signup                     controllers.account.Signup.create()
POST    /signup                     controllers.account.Signup.save()

# Accessed when the user confirms the registration.
GET     /confirm/:confirmToken      controllers.account.Signup.confirm(confirmToken:String)

# Displays a page to send a reset email given the user's email.
GET     /reset/ask                  controllers.account.Reset.ask()
POST    /reset/ask                  controllers.account.Reset.runAsk()

# Resets the password using the password.
GET     /reset/:token               controllers.account.Reset.reset(token:String)
POST    /reset/:token               controllers.account.Reset.runReset(token:String)

GET     /email/:token               controllers.account.settings.Email.validateEmail(token:String)

#Chat related resources
POST     /room                            controllers.EventController.chatRoom(eventId: Long)
GET     /room/chat                       controllers.Chat.chat(username:String, eventId: Long)
GET     /assets/javascripts/chatroom.js  controllers.Chat.chatRoomJs(username:String, eventId: Long)

#Instructor Feed related resources
GET     /feed                            controllers.Dashboard.instructorView()
GET     /feed/chat                       controllers.Chat.instructor(username)
GET     /assets/javascripts/instructorview.js  controllers.Chat.instructorJs(username)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#Map exception landing page
POST    /exceptionOccurred           controllers.Application.exceptionHandler(message: String)
GET     /exceptionOccurred           controllers.Application.exceptionHandler(message: String)
